require_relative '../../../../test_helper'

include RedStack::Identity::Models

describe 'RedStack::Identity::Models::Project' do

  before do
    @os = new_openstack_session

    @admin               = TestFixtures.users[:admin]
    @admin_project       = TestFixtures.projects[:admin_project]
    @admin_default_token = Token.create(
                      username:   @admin[:username], 
                      password:   @admin[:password], 
                      connection: @os.connection
                    )
    @admin_scoped_token  = Token.create(
                      token:      @admin_default_token, 
                      project:    @admin_project[:name], 
                      connection: @os.connection
                    )
    
    @non_admin              = TestFixtures.users[:non_admin]
    @non_admin_project      = TestFixtures.projects[:non_admin_project]
    @nonadmin_default_token = Token.create(
                      username:   @non_admin[:username], 
                      password:   @non_admin[:password], 
                      connection: @os.connection
                    )
    @nonadmin_scoped_token  = Token.create(
                      token:      @nonadmin_default_token, 
                      project:    @non_admin_project[:name], 
                      connection: @os.connection
                    )
  end

  
  it 'retrieves projects' do
    projects = Project.find(
                 endpoint_type: 'public',
                 token:         @nonadmin_default_token, 
                 connection:    @os.connection
               )
    
    projects.must_be_instance_of Array
    projects.length.wont_be_nil
  end

  it 'creates a project' do
    attributes = {
      name:         'REDSTACK_CREATE_PROJECT_TEST',
      description:  'This is a project generated by RedStack',
      enabled:      true
    }
  
    project = Project.create(
                attributes: attributes, 
                token:      @admin_scoped_token,
                connection: @os.connection
              )
    
    project.must_be_instance_of Project
    project['name'].must_equal attributes[:name]
    project['description'].must_equal attributes[:description]
    project['enabled'].must_equal attributes[:enabled]
    
    # Cleanup
    project.delete! token: @admin_scoped_token, connection: @os.connection
  end
       
end